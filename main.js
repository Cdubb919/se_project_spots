!function(){var e={31:function(e,t,r){"use strict";e.exports=r.p+"c5b17daa11333c2f0346.svg"},36:function(e,t,r){"use strict";e.exports=r.p+"d19faa0112f44e2b6e01.svg"},58:function(e,t,r){"use strict";e.exports=r.p+"ac218ab8ae2c025add31.jpg"},66:function(e,t,r){"use strict";e.exports=r.p+"44b92084d1c40cb0a70b.jpg"},117:function(e,t,r){"use strict";e.exports=r.p+"2fc47fd8e9a9bcd9612f.jpg"},238:function(e,t,r){"use strict";e.exports=r.p+"53f0bab7ec2e970778f9.svg"},303:function(e,t,r){"use strict";e.exports=r.p+"40608da7369d39bc1077.svg"},338:function(e,t,r){"use strict";e.exports=r.p+"f37cd48ce187723b17f6.jpg"},353:function(e,t,r){"use strict";e.exports=r.p+"6cc9a0b44bfd83f0954f.svg"},418:function(e,t,r){"use strict";e.exports=r.p+"29a25a3c4fb6b6e4a7d6.svg"},511:function(e,t,r){"use strict";e.exports=r.p+"a326e1ad56a2cd944a28.svg"},528:function(e,t,r){"use strict";e.exports=r.p+"a326e1ad56a2cd944a28.svg"},563:function(e,t,r){"use strict";e.exports=r.p+"b431bbb397d7a39486fd.jpg"},588:function(e,t,r){var o={"./1-photo-by-moritz-feldmann-from-pexels.jpg":751,"./2-photo-by-ceiline-from-pexels.jpg":926,"./3-photo-by-tubanur-dogan-from-pexels.jpg":563,"./4-photo-by-maurice-laschet-from-pexels.jpg":66,"./5-photo-by-van-anh-nguyen-from-pexels.jpg":58,"./6-photo-by-moritz-feldmann-from-pexels.jpg":338,"./Group2.svg":988,"./Logo.svg":848,"./Union.svg":418,"./avatar.jpg":117,"./closeicon.svg":528,"./closeicondefault.svg":511,"./closeiconhover.svg":878,"./closemodalbtn.svg":238,"./closemodalhoverstate.svg":31,"./deletebtn.svg":36,"./deletebtnHover.svg":842,"./editAvatarimg.svg":683,"./likebtncolorchg.svg":783,"./likebtnhoverstate.svg":353,"./plusiconuse.svg":303};function n(e){var t=a(e);return r(t)}function a(e){if(!r.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}n.keys=function(){return Object.keys(o)},n.resolve=a,e.exports=n,n.id=588},683:function(e,t,r){"use strict";e.exports=r.p+"1e97cb162582fe640c54.svg"},751:function(e,t,r){"use strict";e.exports=r.p+"418980fdb81d7ceb84cc.jpg"},783:function(e,t,r){"use strict";e.exports=r.p+"0f0dda9918e145f68d20.svg"},842:function(e,t,r){"use strict";e.exports=r.p+"86ae92bd1a937388d496.svg"},848:function(e,t,r){"use strict";e.exports=r.p+"8650253b58b46f0f1c06.svg"},878:function(e,t,r){"use strict";e.exports=r.p+"a8e301eb86866b1df117.svg"},926:function(e,t,r){"use strict";e.exports=r.p+"da7ae2ac910426f62176.jpg"},988:function(e,t,r){"use strict";e.exports=r.p+"1ecf96fab54a91c898b4.svg"}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var a=t[o]={exports:{}};return e[o](a,a.exports,r),a.exports}r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},o=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?(t.disabled=!0,t.classList.add(r.inactiveButtonClass)):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=e=>{document.querySelectorAll(e.formSelector).forEach(r=>{((e,r)=>{const n=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);n.forEach(s=>{s.addEventListener("input",function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,o)})(e,s,r),o(n,a,r)})})})(r,e)})};function a(e,t,r="Save",o="Saving..."){e&&(e.textContent=t?o:r)}n(e);r(588);const s=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards,this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}addCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}addLike(e,t){const r=t?"DELETE":"PUT";return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:r,headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"1e20e2ef-1387-4112-bcbf-1a5b3929946c","Content-Type":"application/json"}}),c=document.querySelector(".profile__edit-btn"),i=document.querySelector("#edit-profile-modal"),d=document.querySelector("#profile-avatar-input"),l=i.querySelector(".modal__close-btn"),u=i.querySelector(".modal__form"),m=i.querySelector("#profile-name-input"),f=i.querySelector("#profile-description-input"),p=document.querySelector(".profile__add-btn"),v=document.querySelector("#new-post-modal"),_=v.querySelector(".modal__close-btn"),b=v.querySelector(".modal__form"),h=v.querySelector("#card-image-input"),y=v.querySelector("#caption-description-input"),g=document.querySelector("#edit-avatar-form"),S=document.querySelector(".profile__avatar-btn"),E=g.elements.avatar,q=(g.querySelector(".modal__submit-btn"),document.querySelector(".profile__name")),k=document.querySelector(".profile__description"),L=(document.getElementById("nameInput"),document.querySelector(".card__image"),document.querySelector(".card__title"),document.querySelector("#avatar-modal")),x=document.querySelector("#avatar-modal .modal__caption"),j=document.querySelector("#avatar-modal .modal__image"),C=document.querySelector(".modal__close-btn"),$=document.querySelector("#delete-modal"),U=$.querySelector(".modal__form"),I=(document.querySelector("#card_template").content.querySelector(".card"),document.querySelector(".cards__list"));document.querySelector(".like-button");let P=null,A=null,B=null,D=null;function O(e){"Escape"===e.key&&F(document.querySelector(".modal_is-opened"))}document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("click",t=>{t.target.classList.contains("modal")&&F(e)})}),g.addEventListener("submit",function(e){e.preventDefault(),s.editAvatarInfo(E.value).then(e=>{console.log(e.avatar);const t=document.querySelector(".profile__avatar");t&&(t.src=e.avatar),F(d),E.value=""}).catch(e=>{console.error("Failed to update avatar:",e),alert("Could not update avatar. Please try again.")})}),S.addEventListener("click",()=>{w(d),d.querySelector(".modal__close-btn").addEventListener("click",()=>{F(d)})}),document.getElementById("saveBtn");const T=document.getElementById("deleteBtn");function N(e){const t=document.querySelector("#card_template").content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-btn_active"),n.addEventListener("click",()=>{const t=n.classList.contains("card__like-btn_active");s.addLike(e._id,t).then(e=>{console.log("Updated card response:",e),n.classList.toggle("card__like-btn_active",e.isLiked)}).catch(e=>console.error("Like toggle failed:",e))}),o.addEventListener("click",()=>function(e){j.src=e.link,j.alt=e.name,x.textContent=e.name,w(L)}(e)),a.addEventListener("click",()=>{!function(e,t){B=e,D=t._id,w($)}(t,e),w($)}),t}function w(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",O)}function F(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",O)}function H(){document.getElementById("delete-modal").classList.add("modal_is-opened")}document.getElementById("profile-form"),U.addEventListener("submit",e=>{e.preventDefault(),T.textContent="Deleting...",T.disabled=!0,s.deleteCard(D).then(()=>{B&&B.remove(),F($)}).catch(e=>{console.error("Error deleting card:",e),alert("Failed to delete card. Please try again.")}).finally(()=>{T.textContent="Delete",T.disabled=!1})}),document.addEventListener("click",function(e){e.target.classList.contains("card__delete-btn")&&H()}),c.addEventListener("click",()=>{m.value=q.textContent,f.value=k.textContent;const r=Array.from(u.querySelectorAll(e.inputSelector));((e,r,o)=>{r.forEach(r=>{t(e,r,o)})})(u,r,e),w(i)}),l.addEventListener("click",()=>{F(i)}),p.addEventListener("click",function(){w(v)}),_.addEventListener("click",()=>{F(v)}),document.querySelector(".cards__list"),u.addEventListener("submit",function(e){e.preventDefault();const t=e.submitter;a(t,!0);const r=m.value.trim(),o=f.value.trim();if(!r||!o)return console.error("Name and About fields must not be empty."),void a(t,!1);s.editUserInfo({name:r,about:o}).then(e=>{q.textContent=e.name,k.textContent=e.about,F(i)}).catch(e=>{console.error("Failed to update profile:",e)}).finally(()=>{a(t,!1)})}),C.addEventListener("click",function(){F(L)}),b.addEventListener("submit",function(t){t.preventDefault();const r=b.querySelector(".modal__submit-btn"),n={name:y.value.trim(),link:h.value.trim()};n.name&&n.link?(a(r,!0),s.addCard(n).then(t=>{const n=N(t);I.prepend(n),F(v),b.reset();const a=Array.from(b.querySelectorAll(e.inputSelector));o(a,r,e)}).catch(e=>{console.error("Failed to add card:",e)}).finally(()=>{a(r,!1)})):console.error("Both name and image link are required.")}),s.getInitialCards().then(e=>{e.forEach(e=>{console.log("Card item:",e);const t=N(e);I.append(t)})}).catch(console.error),document.addEventListener("click",e=>{if(e.target.classList.contains("card__delete-btn")){const t=e.target.closest(".card"),r=t?.dataset.id;if(!r)return void console.error("Card ID not found");P=t,A=r,H()}}),s.getUserInfo().then(e=>{const t=document.querySelector(".profile__avatar");t&&(t.src=e.avatar)}),U.addEventListener("submit",function(e){e.preventDefault(),s.deleteCard(D).then(()=>{B.remove(),F($)}).catch(console.error)}),n(e)}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,